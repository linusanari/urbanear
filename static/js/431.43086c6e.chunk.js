"use strict";(self.webpackChunkurbanear_main=self.webpackChunkurbanear_main||[]).push([[431],{5:(e,t,n)=>{n.d(t,{m:()=>m});const r=11102230246251565e-32,o=134217729,i=(3+8*r)*r;function s(e,t,n,r,o){let i,s,l,u,a=t[0],c=r[0],f=0,h=0;c>a===c>-a?(i=a,a=t[++f]):(i=c,c=r[++h]);let p=0;if(f<e&&h<n)for(c>a===c>-a?(s=a+i,l=i-(s-a),a=t[++f]):(s=c+i,l=i-(s-c),c=r[++h]),i=s,0!==l&&(o[p++]=l);f<e&&h<n;)c>a===c>-a?(s=i+a,u=s-i,l=i-(s-u)+(a-u),a=t[++f]):(s=i+c,u=s-i,l=i-(s-u)+(c-u),c=r[++h]),i=s,0!==l&&(o[p++]=l);for(;f<e;)s=i+a,u=s-i,l=i-(s-u)+(a-u),a=t[++f],i=s,0!==l&&(o[p++]=l);for(;h<n;)s=i+c,u=s-i,l=i-(s-u)+(c-u),c=r[++h],i=s,0!==l&&(o[p++]=l);return 0===i&&0!==p||(o[p++]=i),p}function l(e){return new Float64Array(e)}const u=33306690738754716e-32,a=22204460492503146e-32,c=11093356479670487e-47,f=l(4),h=l(8),p=l(12),g=l(16),y=l(4);function d(e,t,n,r,l,d){const w=(t-d)*(n-l),v=(e-l)*(r-d),m=w-v,S=Math.abs(w+v);return Math.abs(m)>=u*S?m:-function(e,t,n,r,l,u,d){let w,v,m,S,E,b,P,L,k,M,x,F,I,A,C,N,G,_;const q=e-l,U=n-l,B=t-u,X=r-u;A=q*X,b=o*q,P=b-(b-q),L=q-P,b=o*X,k=b-(b-X),M=X-k,C=L*M-(A-P*k-L*k-P*M),N=B*U,b=o*B,P=b-(b-B),L=B-P,b=o*U,k=b-(b-U),M=U-k,G=L*M-(N-P*k-L*k-P*M),x=C-G,E=C-x,f[0]=C-(x+E)+(E-G),F=A+x,E=F-A,I=A-(F-E)+(x-E),x=I-N,E=I-x,f[1]=I-(x+E)+(E-N),_=F+x,E=_-F,f[2]=F-(_-E)+(x-E),f[3]=_;let z=function(e,t){let n=t[0];for(let r=1;r<e;r++)n+=t[r];return n}(4,f),T=a*d;if(z>=T||-z>=T)return z;if(E=e-q,w=e-(q+E)+(E-l),E=n-U,m=n-(U+E)+(E-l),E=t-B,v=t-(B+E)+(E-u),E=r-X,S=r-(X+E)+(E-u),0===w&&0===v&&0===m&&0===S)return z;if(T=c*d+i*Math.abs(z),z+=q*S+X*w-(B*m+U*v),z>=T||-z>=T)return z;A=w*X,b=o*w,P=b-(b-w),L=w-P,b=o*X,k=b-(b-X),M=X-k,C=L*M-(A-P*k-L*k-P*M),N=v*U,b=o*v,P=b-(b-v),L=v-P,b=o*U,k=b-(b-U),M=U-k,G=L*M-(N-P*k-L*k-P*M),x=C-G,E=C-x,y[0]=C-(x+E)+(E-G),F=A+x,E=F-A,I=A-(F-E)+(x-E),x=I-N,E=I-x,y[1]=I-(x+E)+(E-N),_=F+x,E=_-F,y[2]=F-(_-E)+(x-E),y[3]=_;const j=s(4,f,4,y,h);A=q*S,b=o*q,P=b-(b-q),L=q-P,b=o*S,k=b-(b-S),M=S-k,C=L*M-(A-P*k-L*k-P*M),N=B*m,b=o*B,P=b-(b-B),L=B-P,b=o*m,k=b-(b-m),M=m-k,G=L*M-(N-P*k-L*k-P*M),x=C-G,E=C-x,y[0]=C-(x+E)+(E-G),F=A+x,E=F-A,I=A-(F-E)+(x-E),x=I-N,E=I-x,y[1]=I-(x+E)+(E-N),_=F+x,E=_-F,y[2]=F-(_-E)+(x-E),y[3]=_;const D=s(j,h,4,y,p);A=w*S,b=o*w,P=b-(b-w),L=w-P,b=o*S,k=b-(b-S),M=S-k,C=L*M-(A-P*k-L*k-P*M),N=v*m,b=o*v,P=b-(b-v),L=v-P,b=o*m,k=b-(b-m),M=m-k,G=L*M-(N-P*k-L*k-P*M),x=C-G,E=C-x,y[0]=C-(x+E)+(E-G),F=A+x,E=F-A,I=A-(F-E)+(x-E),x=I-N,E=I-x,y[1]=I-(x+E)+(E-N),_=F+x,E=_-F,y[2]=F-(_-E)+(x-E),y[3]=_;const J=s(D,p,4,y,g);return g[J-1]}(e,t,n,r,l,d,S)}l(4),l(4),l(4),l(4),l(4),l(4),l(4),l(4),l(4),l(8),l(8),l(8),l(4),l(8),l(8),l(8),l(12);l(192),l(192);l(4),l(4),l(4),l(4),l(4),l(4),l(4),l(4),l(8),l(8),l(8),l(8),l(8),l(8),l(8),l(8),l(8),l(4),l(4),l(4),l(8),l(16),l(16),l(16),l(32),l(32),l(48),l(64);l(1152),l(1152);l(4),l(4),l(4),l(4),l(4),l(4),l(4),l(4),l(4),l(4),l(24),l(24),l(24),l(24),l(24),l(24),l(24),l(24),l(24),l(24),l(1152),l(1152),l(1152),l(1152),l(1152),l(2304),l(2304),l(3456),l(5760),l(8),l(8),l(8),l(16),l(24),l(48),l(48),l(96),l(192),l(384),l(384),l(384),l(768);l(96),l(96),l(96),l(1152);function w(e,t){var n,r,o,i,s,l,u,a,c,f=0,h=e[0],p=e[1],g=t.length;for(n=0;n<g;n++){r=0;var y=t[n],w=y.length-1;if((a=y[0])[0]!==y[w][0]&&a[1]!==y[w][1])throw new Error("First and last coordinates in a ring must be the same");for(i=a[0]-h,s=a[1]-p;r<w;r++){if(l=(c=y[r+1])[0]-h,u=c[1]-p,0===s&&0===u){if(l<=0&&i>=0||i<=0&&l>=0)return 0}else if(u>=0&&s<=0||u<=0&&s>=0){if(0===(o=d(i,l,s,u,0,0)))return 0;(o>0&&u>0&&s<=0||o<0&&u<=0&&s>0)&&f++}a=c,s=u,i=l}}return f%2!==0}var v=n(644);function m(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!e)throw new Error("point is required");if(!t)throw new Error("polygon is required");const r=(0,v.uG)(e),o=(0,v.bg)(t),i=o.type,s=t.bbox;let l=o.coordinates;if(s&&!1===function(e,t){return t[0]<=e[0]&&t[1]<=e[1]&&t[2]>=e[0]&&t[3]>=e[1]}(r,s))return!1;"Polygon"===i&&(l=[l]);let u=!1;for(var a=0;a<l.length;++a){const e=w(r,l[a]);if(0===e)return!n.ignoreBoundary;e&&(u=!0)}return u}},23:(e,t,n)=>{n.d(t,{I3:()=>p,Lr:()=>a,N4:()=>i,NU:()=>c,kB:()=>f,n1:()=>l,wi:()=>u,zx:()=>s});var r=6371008.8,o={centimeters:637100880,centimetres:637100880,degrees:360/(2*Math.PI),feet:20902260.511392,inches:39.37*r,kilometers:6371.0088,kilometres:6371.0088,meters:r,metres:r,miles:3958.761333810546,millimeters:6371008800,millimetres:6371008800,nauticalmiles:r/1852,radians:1,yards:6967335.223679999};function i(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r={type:"Feature"};return(0===n.id||n.id)&&(r.id=n.id),n.bbox&&(r.bbox=n.bbox),r.properties=t||{},r.geometry=e,r}function s(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!e)throw new Error("coordinates is required");if(!Array.isArray(e))throw new Error("coordinates must be an Array");if(e.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!g(e[0])||!g(e[1]))throw new Error("coordinates must contain numbers");return i({type:"Point",coordinates:e},t,n)}function l(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};for(const r of e){if(r.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");if(r[r.length-1].length!==r[0].length)throw new Error("First and last Position are not equivalent.");for(let e=0;e<r[r.length-1].length;e++)if(r[r.length-1][e]!==r[0][e])throw new Error("First and last Position are not equivalent.")}return i({type:"Polygon",coordinates:e},t,n)}function u(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(e.length<2)throw new Error("coordinates must be an array of two or more positions");return i({type:"LineString",coordinates:e},t,n)}function a(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n={type:"FeatureCollection"};return t.id&&(n.id=t.id),t.bbox&&(n.bbox=t.bbox),n.features=e,n}function c(e,t){return i({type:"MultiLineString",coordinates:e},t,arguments.length>2&&void 0!==arguments[2]?arguments[2]:{})}function f(e,t){return i({type:"MultiPoint",coordinates:e},t,arguments.length>2&&void 0!==arguments[2]?arguments[2]:{})}function h(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"kilometers";const n=o[t];if(!n)throw new Error(t+" units is invalid");return e/n}function p(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"kilometers",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"kilometers";if(!(e>=0))throw new Error("length must be a positive number");return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"kilometers";const n=o[t];if(!n)throw new Error(t+" units is invalid");return e*n}(h(e,t),n)}function g(e){return!isNaN(e)&&null!==e&&!Array.isArray(e)}},306:(e,t,n)=>{n.d(t,{n:()=>s});var r=n(5),o=n(23),i=n(781);function s(e,t){const n=[];return(0,i.us)(e,(function(e){let s=!1;if("Point"===e.geometry.type)(0,i.kX)(t,(function(t){(0,r.m)(e,t)&&(s=!0)})),s&&n.push(e);else{if("MultiPoint"!==e.geometry.type)throw new Error("Input geometry must be a Point or MultiPoint");var l=[];(0,i.kX)(t,(function(t){(0,i.Fh)(e,(function(e){(0,r.m)(e,t)&&(s=!0,l.push(e))}))})),s&&n.push((0,o.kB)(l,e.properties))}})),(0,o.Lr)(n)}},644:(e,t,n)=>{function r(e){if(!e)throw new Error("coord is required");if(!Array.isArray(e)){if("Feature"===e.type&&null!==e.geometry&&"Point"===e.geometry.type)return[...e.geometry.coordinates];if("Point"===e.type)return[...e.coordinates]}if(Array.isArray(e)&&e.length>=2&&!Array.isArray(e[0])&&!Array.isArray(e[1]))return[...e];throw new Error("coord must be GeoJSON Point or an Array of numbers")}function o(e){return"Feature"===e.type?e.geometry:e}n.d(t,{bg:()=>o,uG:()=>r})},781:(e,t,n)=>{n.d(t,{Fh:()=>o,iw:()=>l,kX:()=>s,us:()=>i});var r=n(23);function o(e,t,n){if(null!==e)for(var r,i,s,l,u,a,c,f,h=0,p=0,g=e.type,y="FeatureCollection"===g,d="Feature"===g,w=y?e.features.length:1,v=0;v<w;v++){u=(f=!!(c=y?e.features[v].geometry:d?e.geometry:e)&&"GeometryCollection"===c.type)?c.geometries.length:1;for(var m=0;m<u;m++){var S=0,E=0;if(null!==(l=f?c.geometries[m]:c)){a=l.coordinates;var b=l.type;switch(h=!n||"Polygon"!==b&&"MultiPolygon"!==b?0:1,b){case null:break;case"Point":if(!1===t(a,p,v,S,E))return!1;p++,S++;break;case"LineString":case"MultiPoint":for(r=0;r<a.length;r++){if(!1===t(a[r],p,v,S,E))return!1;p++,"MultiPoint"===b&&S++}"LineString"===b&&S++;break;case"Polygon":case"MultiLineString":for(r=0;r<a.length;r++){for(i=0;i<a[r].length-h;i++){if(!1===t(a[r][i],p,v,S,E))return!1;p++}"MultiLineString"===b&&S++,"Polygon"===b&&E++}"Polygon"===b&&S++;break;case"MultiPolygon":for(r=0;r<a.length;r++){for(E=0,i=0;i<a[r].length;i++){for(s=0;s<a[r][i].length-h;s++){if(!1===t(a[r][i][s],p,v,S,E))return!1;p++}E++}S++}break;case"GeometryCollection":for(r=0;r<l.geometries.length;r++)if(!1===o(l.geometries[r],t,n))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function i(e,t){if("Feature"===e.type)t(e,0);else if("FeatureCollection"===e.type)for(var n=0;n<e.features.length&&!1!==t(e.features[n],n);n++);}function s(e,t){var n,r,o,i,s,l,u,a,c,f,h=0,p="FeatureCollection"===e.type,g="Feature"===e.type,y=p?e.features.length:1;for(n=0;n<y;n++){for(l=p?e.features[n].geometry:g?e.geometry:e,a=p?e.features[n].properties:g?e.properties:{},c=p?e.features[n].bbox:g?e.bbox:void 0,f=p?e.features[n].id:g?e.id:void 0,s=(u=!!l&&"GeometryCollection"===l.type)?l.geometries.length:1,o=0;o<s;o++)if(null!==(i=u?l.geometries[o]:l))switch(i.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":if(!1===t(i,h,a,c,f))return!1;break;case"GeometryCollection":for(r=0;r<i.geometries.length;r++)if(!1===t(i.geometries[r],h,a,c,f))return!1;break;default:throw new Error("Unknown Geometry Type")}else if(!1===t(null,h,a,c,f))return!1;h++}}function l(e,t){s(e,(function(e,n,o,i,s){var l,u=null===e?null:e.type;switch(u){case null:case"Point":case"LineString":case"Polygon":return!1!==t((0,r.N4)(e,o,{bbox:i,id:s}),n,0)&&void 0}switch(u){case"MultiPoint":l="Point";break;case"MultiLineString":l="LineString";break;case"MultiPolygon":l="Polygon"}for(var a=0;a<e.coordinates.length;a++){var c={type:l,coordinates:e.coordinates[a]};if(!1===t((0,r.N4)(c,o),n,a))return!1}}))}},830:(e,t,n)=>{n.d(t,{c:()=>F});var r=n(5),o=n(23);class i{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:s;if(this.data=e,this.length=this.data.length,this.compare=t,this.length>0)for(let n=(this.length>>1)-1;n>=0;n--)this._down(n)}push(e){this.data.push(e),this.length++,this._up(this.length-1)}pop(){if(0===this.length)return;const e=this.data[0],t=this.data.pop();return this.length--,this.length>0&&(this.data[0]=t,this._down(0)),e}peek(){return this.data[0]}_up(e){const{data:t,compare:n}=this,r=t[e];for(;e>0;){const o=e-1>>1,i=t[o];if(n(r,i)>=0)break;t[e]=i,e=o}t[e]=r}_down(e){const{data:t,compare:n}=this,r=this.length>>1,o=t[e];for(;e<r;){let r=1+(e<<1),i=t[r];const s=r+1;if(s<this.length&&n(t[s],i)<0&&(r=s,i=t[s]),n(i,o)>=0)break;t[e]=i,e=r}t[e]=o}}function s(e,t){return e<t?-1:e>t?1:0}function l(e,t){return e.p.x>t.p.x?1:e.p.x<t.p.x?-1:e.p.y!==t.p.y?e.p.y>t.p.y?1:-1:1}function u(e,t){return e.rightSweepEvent.p.x>t.rightSweepEvent.p.x?1:e.rightSweepEvent.p.x<t.rightSweepEvent.p.x?-1:e.rightSweepEvent.p.y!==t.rightSweepEvent.p.y?e.rightSweepEvent.p.y<t.rightSweepEvent.p.y?1:-1:1}class a{constructor(e,t,n,r){this.p={x:e[0],y:e[1]},this.featureId=t,this.ringId=n,this.eventId=r,this.otherEvent=null,this.isLeftEndpoint=null}isSamePoint(e){return this.p.x===e.p.x&&this.p.y===e.p.y}}let c=0,f=0,h=0;function p(e,t){const n="Feature"===e.type?e.geometry:e;let r=n.coordinates;"Polygon"!==n.type&&"MultiLineString"!==n.type||(r=[r]),"LineString"===n.type&&(r=[[r]]);for(let o=0;o<r.length;o++)for(let e=0;e<r[o].length;e++){let n=r[o][e][0],i=null;f+=1;for(let s=0;s<r[o][e].length-1;s++){i=r[o][e][s+1];const u=new a(n,c,f,h),p=new a(i,c,f,h+1);u.otherEvent=p,p.otherEvent=u,l(u,p)>0?(p.isLeftEndpoint=!0,u.isLeftEndpoint=!1):(u.isLeftEndpoint=!0,p.isLeftEndpoint=!1),t.push(u),t.push(p),n=i,h+=1}}c+=1}class g{constructor(e){this.leftSweepEvent=e,this.rightSweepEvent=e.otherEvent}}function y(e,t){if(null===e||null===t)return!1;if(e.leftSweepEvent.ringId===t.leftSweepEvent.ringId&&(e.rightSweepEvent.isSamePoint(t.leftSweepEvent)||e.rightSweepEvent.isSamePoint(t.leftSweepEvent)||e.rightSweepEvent.isSamePoint(t.rightSweepEvent)||e.leftSweepEvent.isSamePoint(t.leftSweepEvent)||e.leftSweepEvent.isSamePoint(t.rightSweepEvent)))return!1;const n=e.leftSweepEvent.p.x,r=e.leftSweepEvent.p.y,o=e.rightSweepEvent.p.x,i=e.rightSweepEvent.p.y,s=t.leftSweepEvent.p.x,l=t.leftSweepEvent.p.y,u=t.rightSweepEvent.p.x,a=t.rightSweepEvent.p.y,c=(a-l)*(o-n)-(u-s)*(i-r),f=(u-s)*(r-l)-(a-l)*(n-s),h=(o-n)*(r-l)-(i-r)*(n-s);if(0===c)return!1;const p=f/c,g=h/c;if(p>=0&&p<=1&&g>=0&&g<=1){return[n+p*(o-n),r+p*(i-r)]}return!1}var d=function(e,t){const n=new i([],l);return function(e,t){if("FeatureCollection"===e.type){const n=e.features;for(let e=0;e<n.length;e++)p(n[e],t)}else p(e,t)}(e,n),function(e,t){t=t||!1;const n=[],r=new i([],u);for(;e.length;){const o=e.pop();if(o.isLeftEndpoint){const e=new g(o);for(let i=0;i<r.data.length;i++){const s=r.data[i];if(t&&s.leftSweepEvent.featureId===o.featureId)continue;const l=y(e,s);!1!==l&&n.push(l)}r.push(e)}else!1===o.isLeftEndpoint&&r.pop()}return n}(n,t)};function w(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const{removeDuplicates:r=!0,ignoreSelfIntersections:i=!0}=n;let s=[];"FeatureCollection"===e.type?s=s.concat(e.features):"Feature"===e.type?s.push(e):"LineString"!==e.type&&"Polygon"!==e.type&&"MultiLineString"!==e.type&&"MultiPolygon"!==e.type||s.push((0,o.N4)(e)),"FeatureCollection"===t.type?s=s.concat(t.features):"Feature"===t.type?s.push(t):"LineString"!==t.type&&"Polygon"!==t.type&&"MultiLineString"!==t.type&&"MultiPolygon"!==t.type||s.push((0,o.N4)(t));const l=d((0,o.Lr)(s),i);let u=[];if(r){const e={};l.forEach((t=>{const n=t.join(",");e[n]||(e[n]=!0,u.push(t))}))}else u=l;return(0,o.Lr)(u.map((e=>(0,o.zx)(e))))}var v=n(781),m=n(644);function S(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=(0,m.bg)(e);switch(t.properties||"Feature"!==e.type||(t.properties=e.properties),n.type){case"Polygon":return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=(0,m.bg)(e),r=n.coordinates,o=t.properties?t.properties:"Feature"===e.type?e.properties:{};return E(r,o)}(n,t);case"MultiPolygon":return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=(0,m.bg)(e),r=n.coordinates,i=t.properties?t.properties:"Feature"===e.type?e.properties:{},s=[];return r.forEach((e=>{s.push(E(e,i))})),(0,o.Lr)(s)}(n,t);default:throw new Error("invalid poly")}}function E(e,t){return e.length>1?(0,o.NU)(e,t):(0,o.wi)(e[0],t)}function b(e,t){let{ignoreSelfIntersections:n=!0}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{ignoreSelfIntersections:!0},o=!0;return(0,v.iw)(e,(e=>{(0,v.iw)(t,(t=>{if(!1===o)return!1;o=function(e,t,n){switch(e.type){case"Point":switch(t.type){case"Point":return o=e.coordinates,i=t.coordinates,!(o[0]===i[0]&&o[1]===i[1]);case"LineString":return!P(t,e);case"Polygon":return!(0,r.m)(e,t)}break;case"LineString":switch(t.type){case"Point":return!P(e,t);case"LineString":return!function(e,t,n){const r=w(e,t,{ignoreSelfIntersections:n});if(r.features.length>0)return!0;return!1}(e,t,n);case"Polygon":return!L(t,e,n)}break;case"Polygon":switch(t.type){case"Point":return!(0,r.m)(t,e);case"LineString":return!L(e,t,n);case"Polygon":return!function(e,t,n){for(const i of e.coordinates[0])if((0,r.m)(i,t))return!0;for(const i of t.coordinates[0])if((0,r.m)(i,e))return!0;const o=w(S(e),S(t),{ignoreSelfIntersections:n});if(o.features.length>0)return!0;return!1}(t,e,n)}}var o,i;return!1}(e.geometry,t.geometry,n)}))})),o}function P(e,t){for(let n=0;n<e.coordinates.length-1;n++)if(k(e.coordinates[n],e.coordinates[n+1],t.coordinates))return!0;return!1}function L(e,t,n){for(const o of t.coordinates)if((0,r.m)(o,e))return!0;return w(t,S(e),{ignoreSelfIntersections:n}).features.length>0}function k(e,t,n){const r=n[0]-e[0],o=n[1]-e[1],i=t[0]-e[0],s=t[1]-e[1];return 0===r*s-o*i&&(Math.abs(i)>=Math.abs(s)?i>0?e[0]<=n[0]&&n[0]<=t[0]:t[0]<=n[0]&&n[0]<=e[0]:s>0?e[1]<=n[1]&&n[1]<=t[1]:t[1]<=n[1]&&n[1]<=e[1])}function M(e,t){let{ignoreSelfIntersections:n=!0}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=!1;return(0,v.iw)(e,(e=>{(0,v.iw)(t,(t=>{if(!0===r)return!0;r=!b(e.geometry,t.geometry,{ignoreSelfIntersections:n})}))})),r}function x(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const i=[],s=e[0],l=e[1],u=e[2],a=e[3],c=u-s,f=(0,o.I3)(t,r.units,"degrees"),h=a-l,p=(0,o.I3)(n,r.units,"degrees"),g=Math.floor(Math.abs(c)/f),y=Math.floor(Math.abs(h)/p),d=(h-y*p)/2;let w=s+(c-g*f)/2;for(let v=0;v<g;v++){let e=l+d;for(let t=0;t<y;t++){const t=(0,o.n1)([[[w,e],[w,e+p],[w+f,e+p],[w+f,e],[w,e]]],r.properties);r.mask?M(r.mask,t)&&i.push(t):i.push(t),e+=p}w+=f}return(0,o.Lr)(i)}function F(e,t){return x(e,t,t,arguments.length>2&&void 0!==arguments[2]?arguments[2]:{})}}}]);
//# sourceMappingURL=431.43086c6e.chunk.js.map